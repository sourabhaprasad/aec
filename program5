import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler

# Load dataset
df = pd.read_csv("/content/healthcare-diabetes.csv")

# Drop 'Id' column if it exists
df.drop(columns='Id', errors='ignore', inplace=True)

# Replace 0s with NaN in specific columns, then fill with median values
zero_cols = ['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']
df[zero_cols] = df[zero_cols].replace(0, np.nan)
df[zero_cols] = df[zero_cols].fillna(df[zero_cols].median())

# Create age groups
df['AgeGroup'] = pd.cut(
    df['Age'],
    bins=[20, 30, 40, 50, 60, 70, 80],
    labels=['21-30', '31-40', '41-50', '51-60', '61-70', '71-80']
)

# One-hot encode AgeGroup (drop first to avoid multicollinearity)
df = pd.get_dummies(df, columns=['AgeGroup'], drop_first=True)

# Add interaction feature: BMI * Glucose
df['BMI_Glucose'] = df['BMI'] * df['Glucose']

# Normalize selected numerical features
scale_cols = [
    'Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness',
    'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age', 'BMI_Glucose'
]
df[scale_cols] = StandardScaler().fit_transform(df[scale_cols])

